CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(ludd)

SET(CMAKE_MODULE_PATH /usr/share/apps/cmake/modules)

INCLUDE(GpgmeFixMe.cmake OPTIONAL)

FIND_PACKAGE(Gpgme)

INCLUDE(CheckIncludeFile)
#INCLUDE(CheckIncludeFiles)
#INCLUDE(CheckSymbolExists)
INCLUDE(CheckFunctionExists)
#INCLUDE(CheckLibraryExists)

# CHECK_LIBRARY_EXISTS(m	cos	"/usr/lib"	HAVE_LIBM)

# CHECK_INCLUDE_FILES(math.h	"math.h"	HAVE_MATH_H)
# CHECK_INCLUDE_FILES(stdio.h	"stdio.h"	HAVE_STDIO_H)
# CHECK_INCLUDE_FILES(stdlib.h	"stdlib.h"	HAVE_STDLIB_H)
# CHECK_INCLUDE_FILES(string.h	"string.h"	HAVE_STRING_H)
# CHECK_INCLUDE_FILES(strings.h	"strings.h"	HAVE_STRINGS_H)
# CHECK_INCLUDE_FILES(malloc.h	"malloc.h"	HAVE_MALLOC_H)
# CHECK_INCLUDE_FILES(limits.h	"limits.h"	HAVE_LIMITS_H)
# CHECK_INCLUDE_FILES(unistd.h	"unistd.h"	HAVE_UNISTD_H)
# CHECK_INCLUDE_FILES(stdint.h	"stdint.h"	HAVE_STDINT_H)

CHECK_INCLUDE_FILE(poll.h		HAVE_POLL_H)
CHECK_INCLUDE_FILE(sys/poll.h		HAVE_SYS_POLL_H)
CHECK_INCLUDE_FILE(sys/devpoll.h	HAVE_SYS_DEVPOLL_H)
CHECK_INCLUDE_FILE(sys/event.h		HAVE_SYS_EVENT_H)
CHECK_INCLUDE_FILE(dirent.h		HAVE_DIRENT_H)

CHECK_FUNCTION_EXISTS(kqueue HAVE_KQUEUE)
CHECK_FUNCTION_EXISTS(devpoll HAVE_DEVPOLL)
CHECK_FUNCTION_EXISTS(poll HAVE_POLL)
CHECK_FUNCTION_EXISTS(select HAVE_SELECT)

SET(HAVE_INT64T 1)
SET(HAVE_SOCKLENT 1)
SET(HAVE_ATOLL 1)

ADD_DEFINITIONS(-DHAVE_DEFINES_H)
CONFIGURE_FILE(defines.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/defines.h)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

FILE(GLOB SOURCES *.c)

LINK_LIBRARIES(
  #gpgme
  ${GPGME_VANILLA_LIBRARIES}
  #${GPGME_PTH_LIBRARIES}
  #${GPGME_PTHREAD_LIBRARIES}
  )

ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES})
