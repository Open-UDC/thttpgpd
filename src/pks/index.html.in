<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
	<title>@software@ Search Page</title>
	
	<meta http-equiv="content-type"
	 content="text/html; charset=utf-8">
	
  </head>
  <body text="#000000" bgcolor="#BBEEAA" link="#000099"
	  vlink="#990099" alink="#000099">

	<img src="keys.jpg" alt="keys" width="140" align="left">	
	<h1> @software@ OpenPGP Keyserver <br><script>document.write(window.location.hostname);</script></h1>
	<br>
	
	<table cellpadding="2" cellspacing="2" border="1" width="540"
	  bgcolor="#ddddff">
	  <tbody>
   <tr>
	 <td valign="top">	  
	   <h3>Extract a key</h3>

	   You can extract keys by typing in some words that appear in the userid
	   of the key you're looking for, or by typing in the keyid in hex format ("0x...")
	   <p>
	   <form action="/pks/lookup" method="get"> 
		 Search: <input name="search" size="42"> <br>
		 Search: <input name="search" size="42"> <br>
		 Search: <input name="search" size="42"> <br>
		 <br>

		 <input type="radio" name="op" value="index"> get regular index of matching keys  <br>
		 <input type="radio" name="op" value="get"> retrieve ascii-armored keys <br>
		 <br>

		 <input type="reset" value="Reset">				 
		 <input type="submit">			  
	   </form>
	   <br>
	 </td>
   </tr>
   <tr>
	 <td valign="top">	  
	   <h3>Update a key</h3>
	   You can update a key by simply pasting in the ASCII-armored version 
	   of the key and clicking on submit.				  
	   <form action="/pks/add" method="post">

		 <textarea name="keytext" rows="20" cols="66"></textarea> <br>
		 <input type="reset" value="Reset">				 
		 <input type="submit" value="Submit this key to the keyserver!">			 
	   </form>
	 </td>
   </tr>
   
	  </tbody>	 
	</table>

	  <br>
	  <br>
	Ludd is the first implementation of an OpenUDC node. It should then accept only
	<a href="/udid2/">valid "udid2"</a>.<br>
	Thttpgpd is the same thing as Ludd, but compiled without OpenUDC support.<br>
	<br>
	Both are so HTTP servers with such OpenPGP features:
	<ul><li>HKP public key server.</li>
		<li>response/POST authentication - Using the "Content-Type: multipart/msigned; ..." header.</li>
	</ul>
	In a near future, they should support:
	<ul><li>HTTP request authentication - Using the "Authorization: OpenPGP ..." request header.</li>
		<li>RFC6091 (OpenPGP Keys for Transport Layer Security) - Using <a href="http://www.gnu.org/software/gnutls/">GnuTLS</a>.</li>
	</ul>
	Ludd should also be able to keep synchronized with other instances, following the OpenUDC specifications.
	<br><br>
	The original aims of OpenUDC was to develop a decentralized and human based
	crypto-currency.<br>
	You can learn more about OpenUDC at		   
	<a href="http://www.openudc.org/">http://www.openudc.org</a>. &nbsp;<br>
	<br>
	</body>
	<hr>
	<address>
	  @software@/@version@ - Git repository: <a href="https://github.com/Open-UDC/open-udc/tree/master/ludd">https://github.com/Open-UDC/open-udc/</a>
	  <br>
	</address>
</html>


