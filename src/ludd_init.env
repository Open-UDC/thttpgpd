#!/bin/bash
# -*- mode: sh; tabstop: 4; shiftwidth: 4; softtabstop: 4; -*-

# Releases have only 2 numbers in the version. 3-numbers version are for devel
luddVersion="ludd - 0.0.4"
luddHOME="$HOME/.ludd"
luddDefCurrency="unitest2"

function ludd_init_build {
# Read or init the main config file, so initialized this global variables :
#       - Currency (name of the used Currency - Read from conf file)
#       - DaemonKey (fingerprint of the key to use to sign validation responses)
    if [[ -f "$luddHOME/ludd.conf" ]] && . "$luddHOME/ludd.conf" \
	&& [[ "$Currency" ]] ; then
	true #all right
    else
	mkdir -p "$luddHOME"
	cat << EOF > "$luddHOME/ludd.conf" || $ludd_exit 101
# File generated $(date -R) by $ludd_call - $luddVersion
# If you know what you do, modify it as you want
[[ "\$Currency" ]] || Currency="$luddDefCurrency"
# If you want to add detached signature with validation responses, precise the fingerprint or KeyID in the following line.
[[ "\$DaemonKey" ]] || DaemonKey=""
EOF
. "$luddHOME/ludd.conf"
    fi

# detect if we are called by a ludd* script/program or something else (eg: directly in a terminal, debugging purpose)
    if [[ "${0##*/}" =~ ^ludd ]] ; then
	ludd_call="${0##*/}"
	mkdir -p "${TmpDir:=/dev/shm/ludd}" || exit 199
	ludd_exit="exit"
	export PATH="$PATH:${0%/*}"
    else
	unset ludd_call
	mkdir -p "${TmpDir:=/dev/shm/ludd}" || return 199
	ludd_exit="eval rm -rv \"$TmpDir\" ; return "
    #Note, call in terminal is for developp/debug purpose. If you are playing that, make sure that all scripts are in your PATH.
    fi

    trap "rm -rvf \"$TmpDir\"" EXIT
}

function lud_init_getkey {
# get a key from the configured keyserver, minimalize it and store in our pubring.gpg
# Argument 1 : fingerprint to get.
# Note: There is a vulnerability since sha1 is no more safe and keyserver is not authentified : it's hard to forge, but it should be possible to receive a wrong key with same fingerprint.
# Return: true if OK, 1 if error in input argument, 2 if key not found in keyserver, 3 if other error.

    ${lud_gpg%% *} --recv-keys --no-default-keyring --keyring "$TmpDir/pubring.gpg" --keyserver "${KeyServList[0]}" "$1" || return 2
    ${lud_gpg%% *} --export --export-options export-minimal --no-default-keyring --keyring "$TmpDir/pubring.gpg" "$1!" | $lud_gpg --import || return 3
    rm "$TmpDir/pubring.gpg"
}

function ludd_init {
# initialize $luddHOME and initialized global variables :
#       - PubServList (list of publication servers -  Read from conf file) (Maybe useless for the daemon since a list a living one are available trough IRC)
#       - KeyServList (list of OpenPGP keyservers -  Read from conf file)
#       - udcNcset (contain the number of validated creation sheet (start from 0, -1 means no creation sheet validated, should change (and cset.status should be remove)))
#       - lud_gpg (path to gpg tool)
#       - mykeys (list of the fingerprints of all secret keys available here)
# Argument 1 (optionnal): Currency to use, by defaut read the one in ludd.conf (or initialize a defaut currency in a virgin environnement).

    udcNcset=$(gawk ' END { print NR-1 } ' "$udcHOME/$Currency/c/cset.status")

    # Check if GnuPG is available
    if gpg2 --version > /dev/null 2>&1 ; then
	lud_gpg="gpg2"
    elif gpg --version > /dev/null 2>&1 ; then
	lud_gpg="gpg"
    else
	echo -e "\n$ludd_call:Error: No gpg found in your \$PATH ($PATH)\n"\
		"please install GnuPG (http://www.gnupg.org/)\n" >&2
	$ludd_exit 100
    fi

    # Check if curl or wget or GET and POST are available
    if ! ( curl --version > /dev/null || wget --version > /dev/null || (type GET && type POST )) ; then
	echo -e "\n$ludd_call:Error: No tools to make http(s) requests in your \$PATH ($PATH)\n"\
		"please install curl or wget.\n" >&2
	$ludd_exit 100
    fi

    #check gawk, netcat ...

    mkdir -p "$luddHOME/$Currency/c"
    if ! [[ -f "$luddHOME/$Currency/c/cset.status" ]] ; then
	touch "$luddHOME/$Currency/c/cset.status"
	if [[ "$Currency" == "$luddDefCurrency" ]] ; then
	    echo "0F16B563D2768EA62B36A13C442C7E45EEF5EAE6" > "$luddHOME/$Currency/c/0.ifprs"
	    echo "0F16B563D2768EA62B36A13C442C7E45EEF5EAE6" > "$luddHOME/$Currency/c/0.vfprs"
	fi
    fi

    lud_gpg+=" --no-default-keyring --keyring \"$luddHOME/$Currency/pubring.gpg\" "

    # Get the fingerprint of the secret keys available here.
    mykeys=($($lud_gpg --list-secret-keys --with-colons --with-fingerprint --fingerprint | grep "^fpr" | cut -d: -f 10))
	# Warning: $mykeys contain non-signing key.
    if [ -z "$mykeys" ] ; then
	echo -e "\n$ludd_call:Warning: No private key found here.\n" >&2
    fi

    # Set default digest-algo up to SHA256 in GnuPG.
    # Note: useless for OpenUDC : input data are have to match too strict formats.
    if ! grep '^[^#]*\<personal-digest-preferences[[:space:]]\+' "$HOME/.gnupg/gpg.conf" > /dev/null ; then
	cat >> "$HOME/.gnupg/gpg.conf" <<EOF
### Adds generated $(date -R) by $ludd_call - $luddVersion ###
# Set up to SHA256, cf. http://www.debian-administration.org/users/dkg/weblog/48
personal-digest-preferences SHA256
cert-digest-algo SHA256
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
### End of $ludd_call - $luddVersion adds ###
EOF
    fi
}

# Local Variables:
# mode: sh
# End:
