#!/bin/sh /usr/share/dpatch/dpatch-run
## 03-sigbus.dpatch by Ville Jantunen <vja@avoltus.com>
##
## DP: Too frequent file changes on network shares let thttpd crash
## DP: (Closes: #228233).

@DPATCH@

diff -Naur thttpd-2.25b.orig/thttpd.c thttpd-2.25b/thttpd.c
--- thttpd-2.25b.orig/thttpd.c	2007-10-14 10:08:37.000000000 +0000
+++ thttpd-2.25b/thttpd.c	2007-10-14 10:13:48.000000000 +0000
@@ -140,7 +140,7 @@
 off_t stats_bytes;
 int stats_simultaneous;
 
-static volatile int got_hup, got_usr1, watchdog_flag;
+static volatile int got_hup, got_usr1, got_bus, watchdog_flag;
 
 
 /* Forwards. */
@@ -329,6 +329,23 @@
     errno = oerrno;
     }
 
+/* SIGBUS is a workaround for Linux 2.4.x / NFS */
+static void
+handle_bus( int sig )
+{
+    const int oerrno = errno;
+
+#ifndef HAVE_SIGSET
+    /* Set up handler again. */
+    (void) signal( SIGBUG, handle_bus );
+#endif /* ! HAVE_SIGSET */
+
+    /* Just set a flag that we got the signal. */
+    got_bus = 1;
+    
+    /* Restore previous errno. */
+    errno = oerrno;
+}
 
 static void
 re_open_logfile( void )
@@ -619,6 +636,7 @@
     (void) sigset( SIGUSR1, handle_usr1 );
     (void) sigset( SIGUSR2, handle_usr2 );
     (void) sigset( SIGALRM, handle_alrm );
+    (void) sigset( SIGBUS, handle_bus );
 #else /* HAVE_SIGSET */
     (void) signal( SIGTERM, handle_term );
     (void) signal( SIGINT, handle_term );
@@ -628,9 +646,11 @@
     (void) signal( SIGUSR1, handle_usr1 );
     (void) signal( SIGUSR2, handle_usr2 );
     (void) signal( SIGALRM, handle_alrm );
+    (void) signal( SIGBUS, handle_bus );
 #endif /* HAVE_SIGSET */
     got_hup = 0;
     got_usr1 = 0;
+    got_bus = 0;
     watchdog_flag = 0;
     (void) alarm( OCCASIONAL_TIME * 3 );
 
@@ -829,6 +849,13 @@
 		httpd_unlisten( hs );
 		}
 	    }
+
+        /* From handle_send()/writev; see handle_sigbus(). */
+        if (got_bus)
+        {
+            syslog( LOG_WARNING, "SIGBUS received - stale NFS-handle?" );
+            got_bus = 0;
+        }
 	}
 
     /* The main loop terminated. */
